
ES6 Udemy Course Notes
=======================

Babel is a Transpiler
-> A transpiler reads code written in one language and produces the equivalent code in another
-> It converts updated ES6 code into pre-ES6 JS code that older browsers understand

Webpack is a bundler for modules
-> bundles modules into one .js file (reduce errors & resources)
-> comes with dev server (live code updating)

{} Block scoping binds variable declaration to blocks of code. (Can be stand-alone block without function syntax/name)

`let` keyword replaces `var`

`const` keyword creates an immutable binding.
A variable declared with const cannot be re-assigned or re-declared. But,
``` const a = [1,2];
    a.push(4); ```
this works, because you are adding to the list of references, and you are not re-assigning or re-declaring the value.
the variable a is a reference to the array, and you are changing the value of the array not the variable.

'`' backticks allow you to use template literals - using variables in strings with ${}

`...` spread operator

Modules -> reusbable pieces of code that allows us to spread data and code over relevant files.
default export -> fallback or 'main' value/function for module


OOP - Object-Oriented Programming
Entity: Living things in Middle-Earth
Hobbit inherits from Entity, getting any properties that Entity Object have.


Extending ES6 with React
-> JSX adds XML syntax to JS and allows for rendering elements and components into a web application
-> A promise handles the eventual result of an operation and determines if it returns a success or failure

Final Notes:
- Learned how to install, config, build and run a basic web app with babel and webpack
- Learned additional ES6 operators, along with their pitfalls and common usage
- More to learn and practise for ES6 operators, and OOP usage in real-world applications
